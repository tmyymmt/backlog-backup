name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # Only run when a PR is merged (not on direct commits to main)
    if: github.event.commits[0].message.contains('Merge pull request')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(grep -o "__version__ = '[0-9]*\.[0-9]*\.[0-9]*'" backlog_backup/__init__.py | grep -o "[0-9]*\.[0-9]*\.[0-9]*")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
      
      - name: Calculate new version
        id: calc_version
        run: |
          CURRENT_VERSION=${{ steps.get_version.outputs.current_version }}
          # Split version into components
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION"
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.calc_version.outputs.new_version }}
          name: Release v${{ steps.calc_version.outputs.new_version }}
          draft: false
          prerelease: false
          generate_release_notes: true